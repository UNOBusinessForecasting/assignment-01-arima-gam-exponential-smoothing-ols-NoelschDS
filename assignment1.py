# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ow67Fr4-m-1zDx3on_U48ol-2OrBhN-0
"""

#!pip install pygam

import pandas as pd
from prophet import Prophet
from pygam import LinearGAM , s, f, l
import numpy as np
import statsmodels.api as sm
import statsmodels.tsa.stattools as st
import plotly.express as px

data = pd.read_csv("https://github.com/dustywhite7/econ8310-assignment1/raw/main/assignment_data_train.csv")

data

x=data[["month", "day", "hour"]]
y=data["trips"]

model = LinearGAM(s(0) + s(1) + s(2))
modelFit = model.gridsearch(x.values, y)

# Import plotly tools to create a grid of subplots (figures) that work together
from plotly import tools
import plotly.offline as py
import plotly.graph_objs as go
from plotly import subplots


# Name each figure
titles = ['month', 'day', 'hour']

fig = subplots.make_subplots(rows=1, cols=3,
	subplot_titles=titles)
fig['layout'].update(height=800, width=1200,
	title='pyGAM', showlegend=False)

for i, title in enumerate(titles):
  XX = modelFit.generate_X_grid(term=i)
  pdep, confi = modelFit.partial_dependence(term=i, width=.95)
  trace = go.Scatter(x=XX[:,i], y=pdep, mode='lines',
  	name='Effect')
  ci1 = go.Scatter(x = XX[:,i], y=confi[:,0],
  	line=dict(dash='dash', color='grey'),
    	name='95% CI')
  ci2 = go.Scatter(x = XX[:,i], y=confi[:,1],
  	line=dict(dash='dash', color='grey'),
    name='95% CI')
  fig.append_trace(trace, 1, i+1)
  fig.append_trace(ci1, 1, i+1)
  fig.append_trace(ci2, 1, i+1)

py.plot(fig)

fig

date_range = pd.date_range(start="2019-01-01", end="2019-02-01", freq="H")

data_test = pd.read_csv("https://github.com/dustywhite7/econ8310-assignment1/raw/main/assignment_data_test.csv")

data_test

pred=modelFit.predict(data_test[["month", "day", "hour"]])

pred